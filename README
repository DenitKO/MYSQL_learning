/*
Написать функцию, которая удаляет всю информацию об указанном пользователе из БД vk. Пользователь задается по id. Удалить нужно все сообщения, лайки, медиа записи, профиль и запись из таблицы users. Функция должна возвращать номер пользователя.
Предыдущую задачу решить с помощью процедуры и обернуть используемые команды в транзакцию внутри процедуры.
* Написать триггер, который проверяет новое появляющееся сообщество. Длина названия сообщества (поле name) должна быть не менее 5 символов. Если требование не выполнено, то выбрасывать исключение с пояснением.
*/

use vk;

DROP PROCEDURE IF EXISTS `delete_user`;

DELIMITER //

CREATE PROCEDURE delete_user(IN delete_by_user_id BIGINT UNSIGNED, OUT tran_result varchar(200))
BEGIN
	DECLARE `_rollback` BOOL DEFAULT 0;
   	DECLARE code varchar(100);
   	DECLARE error_string varchar(100);
   	DECLARE last_user_id int;

	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION

	begin
    		SET `_rollback` = 1;
		GET stacked DIAGNOSTICS CONDITION 1
          		code = RETURNED_SQLSTATE, error_string = MESSAGE_TEXT;
    		set tran_result := concat('Error occured. Code: ', code, '. Text: ', error_string);
    	end;

   	 START TRANSACTION;
		DELETE FROM likes WHERE user_id = delete_by_user_id;
	
	    IF `_rollback` THEN
	       ROLLBACK;
	    ELSE
		set tran_result := 'ok';
	       COMMIT;
	    END IF;
END//

DELIMITER ;

CALL delete_user(1, @tran_result);
select @tran_result;


DROP TRIGGER IF EXISTS check_lengthname_communities_before_insert;

DELIMITER //

CREATE TRIGGER check_lengthname_communities_before_insert 

BEFORE INSERT ON communities FOR EACH ROW 
BEGIN 
IF LENGTH(NEW.name) < 5 THEN 
	SIGNAL SQLSTATE '20001' 
	SET MESSAGE_TEXT = 'Name must be at least 5 characters.'; 
    END IF; 
END//

DELIMITER ;
